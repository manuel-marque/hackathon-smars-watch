{"ast":null,"code":"var _jsxFileName = \"/Users/Axhar/Documents/hackathon/hackathon-smars-watch/mars/src/components/Weather/Unit.js\";\nimport React from 'react';\nimport { UnitStyles, Toggle } from './Unit.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Unit = ({\n  metric,\n  setMetric\n}) => /*#__PURE__*/_jsxDEV(UnitStyles, {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"cel\",\n    children: \"\\xB0C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n    metric: metric,\n    onClick: () => setMetric(prev => !prev)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"fah\",\n    children: \"\\xB0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Unit;\nexport default Unit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Unit\");","map":{"version":3,"sources":["/Users/Axhar/Documents/hackathon/hackathon-smars-watch/mars/src/components/Weather/Unit.js"],"names":["React","UnitStyles","Toggle","Unit","metric","setMetric","prev"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,eAAnC;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACX,QAAC,UAAD;AAAA,0BACE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAED,MAAhB;AAAwB,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAEC,IAAD,IAAU,CAACA,IAAZ;AAAhD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,I;AAON,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nimport { UnitStyles, Toggle } from './Unit.styles';\n\nconst Unit = ({ metric, setMetric }) => (\n  <UnitStyles>\n    <label htmlFor='cel'>°C</label>\n    <Toggle metric={metric} onClick={() => setMetric((prev) => !prev)} />\n    <label htmlFor='fah'>°F</label>\n  </UnitStyles>\n);\nexport default Unit;"]},"metadata":{},"sourceType":"module"}