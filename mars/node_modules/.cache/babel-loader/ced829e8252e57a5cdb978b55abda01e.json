{"ast":null,"code":"var _jsxFileName = \"/Users/Axhar/Documents/hackathon/hackathon-smars-watch/mars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { formatDate } from './helpers';\nimport { API_URL } from './api';\nimport WeatherData from './components/Weather/WeatherData.js';\nimport Info from './components/Weather/Info.js';\nimport Unit from './components/Weather/Unit.js';\nimport Previous from './components/Weather/Previous.js';\nimport BGImage from '/img/mar.jpg';\nimport { AppWrapper, GlobalStyle, MarsWeather, InfoWrapper } from './App.styles';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [selectSol, setSelectSol] = useState();\n  const [metric, setMetric] = useState(true);\n  const [previous, setPrevious] = useState(false);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {\n      bgImage: BGImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AppWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MarsWeather, {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-title\",\n            children: \" Latest weather at Elysium Plantita \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(WeatherData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(InfoWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Unit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Previous, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"5MZ+AE6eW5jsF3Lq+92ISJ3yFmc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Axhar/Documents/hackathon/hackathon-smars-watch/mars/src/App.js"],"names":["react","useState","useEffect","formatDate","API_URL","WeatherData","Info","Unit","Previous","BGImage","AppWrapper","GlobalStyle","MarsWeather","InfoWrapper","App","loading","setLoading","weather","setWeather","selectSol","setSelectSol","metric","setMetric","previous","setPrevious"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA0B,WAA1B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,EAAgDC,WAAhD,QAAmE,cAAnE;AAEA,OAAO,WAAP;;;;AAGA,MAAMC,GAAG,GAAE,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAE,IAAF,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAE,EAAF,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA2BnB,QAAQ,EAAzC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAqBrB,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAAyBvB,QAAQ,CAAC,KAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAGA,sBACA;AAAA,4BACG,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEO;AAAtB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,UAAD;AAAA,8BACE,QAAC,WAAD;AAAA,kBACGM,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACN;AAAA,kCACA;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,WAAD;AAAA,oCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADA;AAwBD,CAlCD;;GAAMD,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport { formatDate} from './helpers';\nimport {API_URL} from './api';\nimport WeatherData from './components/Weather/WeatherData.js';\nimport Info from './components/Weather/Info.js';\nimport Unit from './components/Weather/Unit.js';\nimport Previous from './components/Weather/Previous.js';\nimport BGImage from '/img/mar.jpg';\nimport { AppWrapper, GlobalStyle, MarsWeather,  InfoWrapper } from './App.styles';\n\nimport './App.css';\n\n\nconst App= () => {\n  const [loading, setLoading] = useState (true);\n  const [weather, setWeather] = useState ([]);\n  const [selectSol, setSelectSol]= useState();\n  const [metric, setMetric]= useState(true);\n  const [previous, setPrevious]= useState(false);\n\n  useEffect(() => {\n    \n  }, [])\n  return (\n  < >\n     <GlobalStyle bgImage={BGImage} />\n     <AppWrapper>\n       <MarsWeather>\n         {loading ? <div> Loading ...</div> : (\n           <> \n           <h1 className=\"main-title\"> Latest weather at Elysium Plantita </h1>\n           <WeatherData />\n           <InfoWrapper>\n            <Info />\n            <Unit />\n           </InfoWrapper>\n           </>\n         )}      \n       </MarsWeather>\n       <Previous />\n     </AppWrapper>\n\n      \n      \n  </>  \n  )  \n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}